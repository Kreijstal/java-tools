  name: CI

  on:
    push:
      branches: [ main, master ]
    pull_request:
      branches: [ main, master ]

  jobs:
    test:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [18.x, 20.x]
          java-version: [11, 17]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Set up Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
        - name: Set up Java ${{ matrix.java-version }}
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: ${{ matrix.java-version }}
        - name: Install Rust toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            toolchain: stable
        - name: Install Krakatau (krak2)
          run: bash scripts/install-krakatau.sh
        - name: Run environment health check
          run: npm run health-check
        - name: Install dependencies
          run: npm ci
        - name: Compile Java sources
          run: npm run build:java
        - name: Run tests
          run: npm test
        - name: Run linting (if configured)
          run: npm run lint --if-present

  playwright-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install Krakatau (krak2)
        run: bash scripts/install-krakatau.sh
      - name: Run environment health check
        run: npm run health-check
      - name: Install dependencies
        run: npm ci
      - name: Compile Java sources
        run: npm run build:java
      - name: Build browser bundle for Playwright tests
        run: npm run build:bundle
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        timeout-minutes: 10
      - name: Run Playwright tests
        run: timeout 300 npm run test:playwright || true
        timeout-minutes: 6

  build:
    runs-on: ubuntu-latest
    needs: [test, playwright-tests]
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Set up Node.js 22.x
          uses: actions/setup-node@v4
          with:
            node-version: 22.x
            cache: 'npm'
        - name: Set up Java 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Install Rust toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            toolchain: stable
        - name: Install Krakatau (krak2)
          run: bash scripts/install-krakatau.sh
        - name: Install dependencies
          run: npm ci
        - name: Build project
          run: npm run build
        - name: Archive build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: build-artifacts
            path: |
              sources/*.class
              node_modules/.cache/
            retention-days: 1

  disasm-diff:
    runs-on: ubuntu-latest
    needs: [test, playwright-tests]
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Set up Node.js 20.x
          uses: actions/setup-node@v4
          with:
            node-version: 22
            cache: 'npm'
        - name: Set up Java 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Install Rust toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            toolchain: stable
        - name: Install Krakatau (krak2)
          run: bash scripts/install-krakatau.sh
        - name: Install dependencies
          run: npm ci
        - name: Compile Java sources
          run: npm run build:java
        - name: Smoke test Krakatau wrapper
          run: bash scripts/krakatau-disasm 2>&1 | head -n 5 || true
        - name: Compare our disassembly with Krakatau
          run: |
            node scripts/compare_with_javap.js
            if ls /tmp/parser_comparison/*_ours_vs_krak2.diff.txt 1> /dev/null 2>&1; then
              echo 'Disassembly mismatch(s) found:'
              cat /tmp/parser_comparison/*_ours_vs_krak2.diff.txt
              exit 1
            else
              echo 'All disassemblies match Krakatau.'
            fi