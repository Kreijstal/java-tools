import java.util.zip.Inflater;
import java.util.zip.DataFormatException;

public class InflaterTest {
    public static void main(String[] args) {
        System.out.println("=== Inflater Test ===");

        try {
            // "Hello, World!" compressed with DEFLATE (no header), generated by Node.js zlib
            byte[] compressedData = {(byte)0xf3, (byte)0x48, (byte)0xcd, (byte)0xc9, (byte)0xc9, (byte)0xd7, (byte)0x51, (byte)0x08, (byte)0xcf, (byte)0x2f, (byte)0xca, (byte)0x49, (byte)0x51, (byte)0x04, (byte)0x00};

            Inflater inflater = new Inflater(true); // true for nowrap
            inflater.setInput(compressedData, 0, compressedData.length);

            byte[] result = new byte[100];
            int resultLength = inflater.inflate(result);
            inflater.end();

            String output = new String(result, 0, resultLength);
            System.out.println("Decompressed data: " + output);

            if (!output.equals("Hello, World!")) {
                System.out.println("ERROR: Decompressed data does not match original!");
            }

        } catch (DataFormatException e) {
            System.out.println("ERROR: DataFormatException during test: " + e.getMessage());
        }

        System.out.println("=== Test Complete ===");
    }
}
